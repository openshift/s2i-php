#!/bin/bash

set -e

source ${PHP_CONTAINER_SCRIPTS_PATH}/common.sh

shopt -s dotglob  ## para mover los archivos ocultos

echo "---> Installing application source..."
mv /tmp/src/* ./



# Fix source directory permissions
fix-permissions ./
fix-permissions ${HTTPD_CONFIGURATION_PATH}

## Lo instala en /opt/app-root/src
if [ -z "$WP_INSTALL_VERSION" ]; then
    wp core download --locale=es_ES --version=latest
else
    wp core download --locale=es_ES --version="$WP_INSTALL_VERSION"
fi


# scl enable rh-nodejs10 bash

# fix-permissions "/opt/rh/rh-nodejs10/root/usr/lib/node_modules"

# npm init --yes
# npm install gulp --global
# npm install gulp-rename --global
# npm install gulp-concat --global
##Donde se guardaran los paquetes globales. Hay que a√±adir a la variable de entorno PATH=$PATH:/opt/rh/rh-php72/root/usr/bin:/opt/rh/rh-mysql80/root/usr/bin/:/opt/app-root/nodejs/.npm-global/bin. Nosotros ya lo hemos hecho en el Dockerfile. 

#npm config set prefix  "/opt/app-root/src/.npm-global"

## Ahora para instalar paquetes" npm install <paquete> --global"

##Workround to working with fs-extra (lo instalamos en local)

# npm install -D grunt-cache-bust
# npm install -D fs-extraxs
mkdir -p /opt/app-root/src/.npm-global
npm config set prefix  "/opt/app-root/src/.npm-global"
npm update
npm init --yes
npm install gulp --save
npm install fs-extra --save
# echo -e "const fs = require('fs-extra');\n fs.ensureDirSync('/opt/app-root/src/cartilago/a/b/c');" > mi.js

# post-assemble files
process_extending_files ./php-post-assemble/ ${PHP_CONTAINER_SCRIPTS_PATH}/post-assemble/

# Fix source directory permissions
fix-permissions /opt/app-root
fix-permissions ./
fix-permissions /silo
# fix-permissions /opt/rh/rh-nodejs10/root/usr/lib/node_modules
fix-permissions ${HTTPD_CONFIGURATION_PATH}
